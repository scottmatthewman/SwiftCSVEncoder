{"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"text":"CSV files are generated from a collection of objects, with one object correlating to a single row of the CSV.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable"},{"type":"text","text":" definition includes an ordered list of column descriptions, which are then applied in turn to create all the fields of each row of the table."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, given a "},{"type":"codeVoice","code":"Person"},{"type":"text","text":" record:"}]},{"code":["struct Doctor {","  var id: UUID","  var firstName: String","  var lastName: String","  var description: String?","  var firstEpisode: Date","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"we can create a ","type":"text"},{"code":"CSVTable","type":"codeVoice"},{"type":"text","text":" with the details of each column:"}]},{"type":"codeListing","syntax":"swift","code":["let doctorsCSV = CSVTable<Doctor>(","  columns: [","    CSVColumn(\"ID\") { $0.id },","    CSVColumn(\"Full Name\") { \"\\($0.firstName) \\($0.lastName)\" },","    CSVColumn(\"Description\") { $0.description },","    CSVColumn(\"First appearance\") { $0.firstEpisode }","  ]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each column definition takes a block that receives the rowâ€™s object instance, and must return an object that supports the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable"},{"type":"text","text":" protocol. Out of the box, that includes the Swift primitives "},{"type":"codeVoice","code":"String"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":", "},{"type":"codeVoice","code":"Double"},{"text":" and Foundation data types ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" and ","type":"text"},{"code":"UUID","type":"codeVoice"},{"type":"text","text":". Optional forms are automatically handled, with "},{"type":"codeVoice","code":"nil"},{"text":" values being output as empty cells.","type":"text"}]},{"inlineContent":[{"text":"To generate the CSV file, call ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable\/export(rows:)","type":"reference"},{"text":". The return value is the full CSV file, including a header row. String items will be enclosed in double quotes where needed:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"csv","code":["ID,Full Name,Description,First appearance","1,William Hartnell,Later played by Richard Hurndall and David Bradley,1963-11-23","2,Patrick Troughton,,1966-11-05","3,Jon Pertwee,,1970-01-03","4,Tom Baker,\"No relation to the Sixth Doctor, Colin Baker\",1974-12-28"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcsvencoder"]}],"abstract":[{"text":"A lightweight library for generating CSV files from your Swift data.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder"},"kind":"symbol","metadata":{"roleHeading":"Framework","symbolKind":"module","modules":[{"name":"SwiftCSVEncoder"}],"role":"collection","title":"SwiftCSVEncoder","externalID":"SwiftCSVEncoder"},"topicSections":[{"identifiers":["doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVColumn","doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncoderConfiguration"],"title":"Defining CSV structure"},{"identifiers":["doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable"],"title":"Protocols"}],"references":{"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVEncoderConfiguration":{"kind":"symbol","type":"topic","title":"CSVEncoderConfiguration","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncoderConfiguration","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CSVEncoderConfiguration"}],"url":"\/documentation\/swiftcsvencoder\/csvencoderconfiguration","abstract":[{"text":"A set of decisions about how to encode data for a given ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CSVEncoderConfiguration","kind":"identifier"}]},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder":{"url":"\/documentation\/swiftcsvencoder","title":"SwiftCSVEncoder","role":"collection","type":"topic","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder","abstract":[{"text":"A lightweight library for generating CSV files from your Swift data.","type":"text"}],"kind":"symbol"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVColumn":{"type":"topic","role":"symbol","url":"\/documentation\/swiftcsvencoder\/csvcolumn","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVColumn","abstract":[{"text":"The definition of a single column within a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable"},{"type":"text","text":"."}],"title":"CSVColumn","navigatorTitle":[{"text":"CSVColumn","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CSVColumn"}],"kind":"symbol"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVEncodable":{"abstract":[{"type":"text","text":"Marks a data type as being natively encodable to a CSV field."}],"type":"topic","title":"CSVEncodable","url":"\/documentation\/swiftcsvencoder\/csvencodable","kind":"symbol","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable","navigatorTitle":[{"text":"CSVEncodable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CSVEncodable"}],"role":"symbol"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVTable/export(rows:)":{"kind":"symbol","type":"topic","title":"export(rows:)","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable\/export(rows:)","role":"symbol","url":"\/documentation\/swiftcsvencoder\/csvtable\/export(rows:)","abstract":[{"text":"Constructs a CSV text file structure from the given rows of data.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"export"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rows"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"text":"<","kind":"text"},{"text":"Record","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVTable":{"navigatorTitle":[{"text":"CSVTable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CSVTable","kind":"identifier"}],"kind":"symbol","title":"CSVTable","type":"topic","url":"\/documentation\/swiftcsvencoder\/csvtable","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","role":"symbol","abstract":[{"text":"The definition of a CSV file structure.","type":"text"}]}}}