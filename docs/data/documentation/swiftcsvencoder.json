{"abstract":[{"text":"A lightweight library for generating CSV files from your Swift data.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcsvencoder"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"CSV files are generated from a collection of objects, with one object correlating to a single row of the CSV."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","isActive":true},{"text":" definition includes an ordered list of column descriptions, which are then applied in turn to create all the fields of each row of the table.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, given a ","type":"text"},{"code":"Doctor","type":"codeVoice"},{"text":" record:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct Doctor {","  var id: UUID","  var firstName: String","  var lastName: String","  var description: String?","  var firstEpisode: Date","}"]},{"inlineContent":[{"text":"we can create a ","type":"text"},{"code":"CSVTable","type":"codeVoice"},{"text":" with the details of each column, using either keypaths or closures that take an instance of a row’s data object:","type":"text"}],"type":"paragraph"},{"code":["let doctorsCSV = CSVTable<Doctor>(","  columns: [","    CSVColumn(\"ID\", \\.id),","    CSVColumn(\"Full Name\") { doctor in","      let formatter = PersonNameComponentsFormatter()","      let nameComponents = PersonNameComponents(","        givenName: doctor.firstName,","        familyName: doctor.lastName","      )","      return formatter.string(from: nameComponents) ","    },","    CSVColumn(\"Description\", \\.description),","    CSVColumn(\"First appearance\", \\.firstEpisode)","  ]",")"],"syntax":"swift","type":"codeListing"},{"type":"aside","style":"tip","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As each block will be run once per row of your CSV file, you should avoid doing excessive work (such as creating a new "},{"code":"PersonNameComponentsFormatter","type":"codeVoice"},{"type":"text","text":" in this example) in your blocks."}]}]},{"type":"paragraph","inlineContent":[{"text":"Each column definition takes a block that receives the row’s object instance, and must return an object that supports the ","type":"text"},{"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable","type":"reference","isActive":true},{"text":" protocol. If what needs to be returned is a simple attribute, you can specify a keypath instead. So the following column definitions are equivalent:","type":"text"}]},{"syntax":"swift","code":["CSVColumn(\"Description\", attribute: { doctor in doctor.description })","CSVColumn(\"Description\") { $0.description }","CSVColumn(\"Description\", \\.description)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder","isActive":true},{"text":" adds ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable"},{"type":"text","text":" conformance to the Swift primitives "},{"type":"codeVoice","code":"String"},{"type":"text","text":", "},{"type":"codeVoice","code":"Int"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":", "},{"type":"codeVoice","code":"Bool"},{"text":" and Foundation data types ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" and ","type":"text"},{"code":"UUID","type":"codeVoice"},{"type":"text","text":". Optional forms are automatically handled, with "},{"code":"nil","type":"codeVoice"},{"text":" values being output as empty cells.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To generate the CSV file, call "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable\/export(rows:)"},{"type":"text","text":". The return value is the full CSV file, including a header row. String items will be enclosed in double quotes where needed:"}]},{"syntax":"csv","type":"codeListing","code":["ID,Full Name,Description,First appearance","1,William Hartnell,Later played by Richard Hurndall and David Bradley,1963-11-23","2,Patrick Troughton,,1966-11-05","3,Jon Pertwee,,1970-01-03","4,Tom Baker,\"No relation to the Sixth Doctor, Colin Baker\",1974-12-28"]}],"kind":"content"}],"metadata":{"roleHeading":"Framework","modules":[{"name":"SwiftCSVEncoder"}],"role":"collection","title":"SwiftCSVEncoder","externalID":"SwiftCSVEncoder","symbolKind":"module"},"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Defining CSV structure","identifiers":["doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVColumn","doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncoderConfiguration"]},{"identifiers":["doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable"],"title":"Protocols"},{"identifiers":["doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/IncorporatingCSV"],"generated":true,"title":"Articles"},{"title":"Extended Modules","identifiers":["doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/Foundation","doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/Swift"]}],"references":{"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVColumn":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CSVColumn","kind":"identifier"}],"title":"CSVColumn","kind":"symbol","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVColumn","abstract":[{"type":"text","text":"The definition of a single column within a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CSVColumn"}],"url":"\/documentation\/swiftcsvencoder\/csvcolumn","type":"topic"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/Swift":{"type":"topic","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/Swift","role":"collection","url":"\/documentation\/swiftcsvencoder\/swift","title":"Swift","kind":"symbol","abstract":[]},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/IncorporatingCSV":{"type":"topic","kind":"article","url":"\/documentation\/swiftcsvencoder\/incorporatingcsv","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/IncorporatingCSV","title":"Exporting CSV from SwiftUI","role":"article","abstract":[{"type":"text","text":"Generating CSV data is one thing. How you build the export into your app is another matter."}]},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVTable":{"title":"CSVTable","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","url":"\/documentation\/swiftcsvencoder\/csvtable","role":"symbol","abstract":[{"type":"text","text":"The definition of a CSV file structure."}],"navigatorTitle":[{"kind":"identifier","text":"CSVTable"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CSVTable","kind":"identifier"}]},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVEncodable":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CSVEncodable","kind":"identifier"}],"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncodable","abstract":[{"text":"Marks a data type as being natively encodable to a CSV field.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CSVEncodable"}],"title":"CSVEncodable","type":"topic","url":"\/documentation\/swiftcsvencoder\/csvencodable","kind":"symbol","role":"symbol"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/Foundation":{"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/Foundation","role":"collection","abstract":[],"url":"\/documentation\/swiftcsvencoder\/foundation","kind":"symbol","type":"topic","title":"Foundation"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVEncoderConfiguration":{"type":"topic","url":"\/documentation\/swiftcsvencoder\/csvencoderconfiguration","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CSVEncoderConfiguration"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A set of decisions about how to encode data for a given "},{"type":"reference","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CSVEncoderConfiguration","kind":"identifier"}],"identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVEncoderConfiguration","title":"CSVEncoderConfiguration"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder":{"url":"\/documentation\/swiftcsvencoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A lightweight library for generating CSV files from your Swift data."}],"title":"SwiftCSVEncoder","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder","role":"collection"},"doc://SwiftCSVEncoder/documentation/SwiftCSVEncoder/CSVTable/export(rows:)":{"kind":"symbol","type":"topic","url":"\/documentation\/swiftcsvencoder\/csvtable\/export(rows:)","title":"export(rows:)","role":"symbol","identifier":"doc:\/\/SwiftCSVEncoder\/documentation\/SwiftCSVEncoder\/CSVTable\/export(rows:)","abstract":[{"type":"text","text":"Constructs a CSV text file structure from the given rows of data."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"export","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rows","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Record"},{"text":">) -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]}}}